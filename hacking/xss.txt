Crystal L

== Part 1: Cookies ==
a. Go to FDF and use your browser's Inspector to take a look at your cookies for cs338.jeffondich.com. Are there cookies for that domain? What are their names and values?

 Yes, there is a cookie, namely:
	- Name : theme
	- Value : default
	- Domain : cs338.jeffondich.com
	- Path : /
	- Expires : 2024-02-03T20:30:11.740Z
	- Size : 12
	- Priority : Medium

b. Using the "Theme" menu on the FDF page, change your theme to red or blue. Look at your cookies for cs338.jeffondich.com again. Did they change?

 Yes, they changed. The theme name remains the same, but in lieu of the default value,
 it's now "red" when I changed the theme to red. The size is 8 instead of 12.

c. Do the previous two steps (examining cookies and changing the theme) using Burpsuite (either on your base OS or on Kali). What "Cookie:" and "Set-Cookie:" HTTP headers do you see? Do you see the same cookie values as you did with the Inspector?

 (a) Set-Cookie: theme=default; Expires=Sun, 04 Feb 2024 01:27:25 GMT; Path=/ -- it's
 the same. (b) Set-Cookie: theme=red; Expires=Sun, 04 Feb 2024 01:31:26 GMT; Path=/ 
 -- the same. Cookie headers contain the theme written in "theme=..."

d. Quit your browser, relaunch it, and go back to the FDF. Is your red or blue theme (wherever you last left it) still selected?

 Yes.

e. How is the current theme transmitted between the browser and the FDF server?

 The request when accessing the site again contains the Cookie header where the theme is set to red,
 which is what I had set it to when changing the theme.

f. When you change the theme, how is the change transmitted between the browser and the FDF server?

 A new request is made when the theme is changed. In the request, the theme is set to blue
 now in the Cookie header.

g. How could you use your browser's Inspector to change the FDF theme without using the FDF's Theme menu?

 Go to inspector -> Select Application tab -> Expand "Cookies" under "Storage"
 -> Double click the Value parameter -> Change to a different color.

h. How could you use Burpsuite's Proxy tool to change the FDF theme without using the FDF's Theme menu?

 Go to Target tab -> Select "http://cs338.jeffondich.com" -> Right click on the
 URL with the theme you want -> Request in browser -> In current session -> Copy
 and paste the URL and put it into the browser.

i. Where does your OS (the OS where you're running your browser and Burpsuite, that is) store cookies?

 Cookies are stored on my computer by a website server, in which the server will be
 able to retrieve or read the contents.

== Part 2: Cross-site Scripting (XSS) ==
a. Provide a diagram and/or a step-by-step description of the nature and timing of Moriarty's attack on users of the FDF.

 (1) The user opens the FDF and clicks on a post
 (2) When post is loaded, any HTML, CSS, JS will be parsed and executed
 (3) Any post will be injected directly into code, so typing code in the box will
 be executed upon the post being loaded.

b. Describe an XSS attack that is more virulent than Moriarty's "turn something red" and "pop up a message" attacks. Think about what kinds of things the Javascript might have access to via Alice's browser when Alice views the attacker's post.

 You could inject code that forces a malicious or virulent download to the user's
 device via JS.

c. Do it again: describe a second attack that is more virulent than Moriarty's, but that's substantially different from your first idea.

 A second attack could be injecting fake login forms so the user can input their
 login information. With this, the details can be sent to the server of the
 injector.

d. What techniques can the server or the browser use to prevent what Moriarty is doing?

 - Encode any user input so it doesn't get interpreted as code
 - Validate input data